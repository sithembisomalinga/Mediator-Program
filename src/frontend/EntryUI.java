package frontend;

import backend.Database;
import backend.Entry;
import backend.EntryGroupConnection;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.*;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.NoSuchElementException;
import java.util.Scanner;

/**
 * Deals with the complex Entry data for submission.
 *
 * @author SITHEMBISO MALINGA
 */
public class EntryUI extends javax.swing.JFrame {

    private static boolean editMode; //true means edit entry, false means add entry
    private static Entry ent;
    private boolean appearance;

    public EntryUI() {
        editMode = false;
        ent = new Entry();
        initComponents();
        loadSettings();
        if (appearance) {
            recolourToLightTheme();
        }
        jTextFieldID.setVisible(false);
        clearFields();
        reloadComboBoxes(retreiveCurrentType());
        setTitle("New Entry");
    }

    /**
     * Creates new form EntryUI
     *
     * @param entryID
     */
    public EntryUI(int entryID) {
        editMode = true;
        ent = new Entry(entryID);
        initComponents();
        loadSettings();
        if (appearance) {
            recolourToLightTheme();
        }
        jTextFieldID.setVisible(false);
        reloadComboBoxes(ent.getType());
        setFields();
        updatePerc();
        setTitle("Editing Entry");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        buttonGroupType = new javax.swing.ButtonGroup();
        buttonGroupRating = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jbtnApply = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jMainPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jCheckBoxCreatorLock = new javax.swing.JCheckBox();
        jCheckBoxYearLock = new javax.swing.JCheckBox();
        jRadioButtonMusic = new javax.swing.JRadioButton();
        jRadioButtonTV = new javax.swing.JRadioButton();
        jRadioButtonFilm = new javax.swing.JRadioButton();
        jRadioButtonBook = new javax.swing.JRadioButton();
        jRadioButtonGame = new javax.swing.JRadioButton();
        jTextFieldTitle = new javax.swing.JTextField();
        jTextFieldCreator = new javax.swing.JTextField();
        jTextFieldYear = new javax.swing.JTextField();
        jTextFieldGroups = new javax.swing.JTextField();
        jProgressPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSpinnerTotal = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerCompleted = new javax.swing.JSpinner();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxTotalType = new javax.swing.JComboBox<>();
        jRadioButton0 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaNote = new javax.swing.JTextArea();
        jCollectionPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBoxMedium = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldSubtitle = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jComboBoxOwnership = new javax.swing.JComboBox<>();
        jDateChooserExactDate = new datechooser.beans.DateChooserCombo();
        jSchedulePanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCheckBoxWish = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jDateChooserDeadline = new datechooser.beans.DateChooserCombo();
        jTextFieldID = new javax.swing.JTextField();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(19, 20, 33));

        jbtnApply.setBackground(new java.awt.Color(62, 144, 197));
        jbtnApply.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jbtnApply.setForeground(new java.awt.Color(255, 255, 255));
        jbtnApply.setText("Apply");
        jbtnApply.setBorderPainted(false);
        jbtnApply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnApplyMouseClicked(evt);
            }
        });

        jbtnExit.setBackground(new java.awt.Color(62, 144, 197));
        jbtnExit.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jbtnExit.setForeground(new java.awt.Color(255, 255, 255));
        jbtnExit.setText("Cancel");
        jbtnExit.setBorderPainted(false);
        jbtnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnExitMouseClicked(evt);
            }
        });

        jLabelTitle.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("ENTRY WINDOW");
        jLabelTitle.setToolTipText("");

        jMainPanel.setBackground(new java.awt.Color(35, 36, 56));
        jMainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(130, 135, 144)));
        jMainPanel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MAIN DETAILS");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Title");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Creator");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Year");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Type");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Groups");

        jCheckBoxCreatorLock.setBackground(new java.awt.Color(35, 36, 56));
        jCheckBoxCreatorLock.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jCheckBoxCreatorLock.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxCreatorLock.setText("LOCK");
        jCheckBoxCreatorLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCreatorLockActionPerformed(evt);
            }
        });

        jCheckBoxYearLock.setBackground(new java.awt.Color(35, 36, 56));
        jCheckBoxYearLock.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jCheckBoxYearLock.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxYearLock.setText("LOCK");
        jCheckBoxYearLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxYearLockActionPerformed(evt);
            }
        });

        jRadioButtonMusic.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupType.add(jRadioButtonMusic);
        jRadioButtonMusic.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jRadioButtonMusic.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonMusic.setText("Music");
        jRadioButtonMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMusicActionPerformed(evt);
            }
        });

        jRadioButtonTV.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupType.add(jRadioButtonTV);
        jRadioButtonTV.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jRadioButtonTV.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonTV.setText("TV");
        jRadioButtonTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTVActionPerformed(evt);
            }
        });

        jRadioButtonFilm.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupType.add(jRadioButtonFilm);
        jRadioButtonFilm.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jRadioButtonFilm.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonFilm.setText("Film");
        jRadioButtonFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFilmActionPerformed(evt);
            }
        });

        jRadioButtonBook.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupType.add(jRadioButtonBook);
        jRadioButtonBook.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jRadioButtonBook.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonBook.setText("Book");
        jRadioButtonBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBookActionPerformed(evt);
            }
        });

        jRadioButtonGame.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupType.add(jRadioButtonGame);
        jRadioButtonGame.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jRadioButtonGame.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonGame.setText("Game");
        jRadioButtonGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGameActionPerformed(evt);
            }
        });

        jTextFieldTitle.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jTextFieldCreator.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jTextFieldYear.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldYearActionPerformed(evt);
            }
        });

        jTextFieldGroups.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldGroups.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout jMainPanelLayout = new javax.swing.GroupLayout(jMainPanel);
        jMainPanel.setLayout(jMainPanelLayout);
        jMainPanelLayout.setHorizontalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jMainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jMainPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldYear)
                                    .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldTitle)
                                        .addComponent(jTextFieldCreator)
                                        .addComponent(jTextFieldGroups, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))))
                            .addGroup(jMainPanelLayout.createSequentialGroup()
                                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jMainPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxCreatorLock))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addGroup(jMainPanelLayout.createSequentialGroup()
                                        .addComponent(jRadioButtonMusic)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonTV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonFilm)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonBook)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonGame))
                                    .addGroup(jMainPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxYearLock)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jMainPanelLayout.setVerticalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jCheckBoxCreatorLock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCreator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCheckBoxYearLock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonMusic)
                    .addComponent(jRadioButtonTV)
                    .addComponent(jRadioButtonFilm)
                    .addComponent(jRadioButtonBook)
                    .addComponent(jRadioButtonGame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jProgressPanel.setBackground(new java.awt.Color(35, 36, 56));
        jProgressPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(130, 135, 144)));
        jProgressPanel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PROGRESS");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total Length");

        jSpinnerTotal.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jSpinnerTotal.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSpinnerTotal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerTotalStateChanged(evt);
            }
        });
        jSpinnerTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinnerTotalPropertyChange(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Completed Length");

        jSpinnerCompleted.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jSpinnerCompleted.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinnerCompleted.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCompletedStateChanged(evt);
            }
        });

        jProgressBar.setBackground(new java.awt.Color(35, 36, 56));
        jProgressBar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jProgressBar.setForeground(new java.awt.Color(207, 104, 126));
        jProgressBar.setToolTipText("");
        jProgressBar.setValue(100);
        jProgressBar.setAlignmentX(0.0F);
        jProgressBar.setAlignmentY(0.0F);
        jProgressBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(207, 104, 126), 3));
        jProgressBar.setOpaque(true);
        jProgressBar.setStringPainted(true);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Rating");

        jComboBoxTotalType.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBoxTotalType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tracks" }));
        jComboBoxTotalType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTotalTypeActionPerformed(evt);
            }
        });

        jRadioButton0.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton0);
        jRadioButton0.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton0ActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton1);
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton3);
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton4);
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton5);
        jRadioButton5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jRadioButton6.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton6);
        jRadioButton6.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jRadioButton7.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton7);
        jRadioButton7.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jRadioButton8.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton8);
        jRadioButton8.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton8ActionPerformed(evt);
            }
        });

        jRadioButton9.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton9);
        jRadioButton9.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton9ActionPerformed(evt);
            }
        });

        jRadioButton10.setBackground(new java.awt.Color(35, 36, 56));
        buttonGroupRating.add(jRadioButton10);
        jRadioButton10.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("  0     1     2     3     4     5     6     7     8     9    10");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Note");

        jTextAreaNote.setColumns(20);
        jTextAreaNote.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextAreaNote.setRows(5);
        jTextAreaNote.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaNote);

        javax.swing.GroupLayout jProgressPanelLayout = new javax.swing.GroupLayout(jProgressPanel);
        jProgressPanel.setLayout(jProgressPanelLayout);
        jProgressPanelLayout.setHorizontalGroup(
            jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jProgressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jProgressPanelLayout.createSequentialGroup()
                        .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jProgressPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addGroup(jProgressPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinnerCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jProgressPanelLayout.createSequentialGroup()
                                                .addComponent(jSpinnerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jComboBoxTotalType, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jProgressPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jProgressPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jProgressPanelLayout.createSequentialGroup()
                                        .addComponent(jRadioButton0)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButton10))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jProgressPanelLayout.createSequentialGroup()
                                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17)
                                    .addGroup(jProgressPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jProgressPanelLayout.setVerticalGroup(
            jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jProgressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTotalType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioButton0)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton8)
                    .addComponent(jRadioButton9)
                    .addComponent(jRadioButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jCollectionPanel.setBackground(new java.awt.Color(35, 36, 56));
        jCollectionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(130, 135, 144)));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("COLLECTION");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Exact Release Date");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Medium");

        jComboBoxMedium.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBoxMedium.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vinyl" }));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Subtitle");

        jTextFieldSubtitle.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldSubtitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSubtitleActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Ownership");

        jComboBoxOwnership.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBoxOwnership.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Wanting To Own", "Currently Owned", "Lent Out", "Used To Own" }));

        jDateChooserExactDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    javax.swing.GroupLayout jCollectionPanelLayout = new javax.swing.GroupLayout(jCollectionPanel);
    jCollectionPanel.setLayout(jCollectionPanelLayout);
    jCollectionPanelLayout.setHorizontalGroup(
        jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jCollectionPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jCollectionPanelLayout.createSequentialGroup()
                    .addGroup(jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addGroup(jCollectionPanelLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19)
                                .addComponent(jLabel18)
                                .addComponent(jLabel20)
                                .addComponent(jLabel21)
                                .addGroup(jCollectionPanelLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxOwnership, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jDateChooserExactDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jCollectionPanelLayout.createSequentialGroup()
                    .addGap(0, 21, Short.MAX_VALUE)
                    .addComponent(jTextFieldSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    jCollectionPanelLayout.setVerticalGroup(
        jCollectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jCollectionPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel18)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jDateChooserExactDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(12, 12, 12)
            .addComponent(jLabel19)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jComboBoxMedium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel20)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextFieldSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel21)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jComboBoxOwnership, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jSchedulePanel.setBackground(new java.awt.Color(35, 36, 56));
    jSchedulePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(130, 135, 144)));

    jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setText("SCHEDULING");

    jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(255, 255, 255));
    jLabel11.setText("Wishlist");

    jCheckBoxWish.setBackground(new java.awt.Color(35, 36, 56));
    jCheckBoxWish.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
    jCheckBoxWish.setForeground(new java.awt.Color(255, 255, 255));
    jCheckBoxWish.setText("Wishlist");
    jCheckBoxWish.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBoxWishActionPerformed(evt);
        }
    });

    jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(255, 255, 255));
    jLabel12.setText("Deadline");

    javax.swing.GroupLayout jSchedulePanelLayout = new javax.swing.GroupLayout(jSchedulePanel);
    jSchedulePanel.setLayout(jSchedulePanelLayout);
    jSchedulePanelLayout.setHorizontalGroup(
        jSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jSchedulePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4)
                .addGroup(jSchedulePanelLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addGroup(jSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)
                        .addGroup(jSchedulePanelLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBoxWish)
                                .addComponent(jDateChooserDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jSchedulePanelLayout.setVerticalGroup(
        jSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jSchedulePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel11)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jCheckBoxWish)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel12)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jDateChooserDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(15, Short.MAX_VALUE))
    );

    jTextFieldID.setText("jTextField2");
    jTextFieldID.setOpaque(false);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jbtnExit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jbtnApply))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCollectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSchedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(8, 8, 8)
            .addComponent(jLabelTitle)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jProgressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSchedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jCollectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtnApply)
                .addComponent(jbtnExit))
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    //SOME OF THE AUTOGENERATED FIELDS ARE UNUSED BUT WEREN'T ABLE TO BE REMOVED
    //IF A METHOD HAS A COMMENT ABOVE IT IT MEANS IT IS USED

    private void jCheckBoxCreatorLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCreatorLockActionPerformed

    }//GEN-LAST:event_jCheckBoxCreatorLockActionPerformed

    private void jCheckBoxYearLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxYearLockActionPerformed

    }//GEN-LAST:event_jCheckBoxYearLockActionPerformed

    //Radio Button Type Changed
    private void jRadioButtonMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMusicActionPerformed
        reloadComboBoxes(retreiveCurrentType());
    }//GEN-LAST:event_jRadioButtonMusicActionPerformed

    //Radio Button Type Changed
    private void jRadioButtonTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTVActionPerformed
        reloadComboBoxes(retreiveCurrentType());
    }//GEN-LAST:event_jRadioButtonTVActionPerformed

    //Radio Button Type Changed
    private void jRadioButtonFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFilmActionPerformed
        reloadComboBoxes(retreiveCurrentType());
    }//GEN-LAST:event_jRadioButtonFilmActionPerformed

    private void jComboBoxTotalTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTotalTypeActionPerformed

    }//GEN-LAST:event_jComboBoxTotalTypeActionPerformed

    private void jRadioButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton0ActionPerformed

    }//GEN-LAST:event_jRadioButton0ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed

    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed

    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed

    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed

    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed

    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed

    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton8ActionPerformed

    }//GEN-LAST:event_jRadioButton8ActionPerformed

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton9ActionPerformed

    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton10ActionPerformed

    }//GEN-LAST:event_jRadioButton10ActionPerformed

    private void jTextFieldSubtitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSubtitleActionPerformed

    }//GEN-LAST:event_jTextFieldSubtitleActionPerformed

    private void jTextFieldYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldYearActionPerformed

    }//GEN-LAST:event_jTextFieldYearActionPerformed

    //Apply Button Pressed
    private void jbtnApplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnApplyMouseClicked
        refreshEntry();
        submitEntry();
        if ((jCheckBoxCreatorLock.isSelected() || jCheckBoxYearLock.isSelected()) && !editMode) {
            /*if the creator lock or year lock is enabled, it means that another
            entry can easily be added that has similar data in rapid succession.
            
            The only way to stop this is to either untick the boxes OR hit cancel.
             */
            if (jCheckBoxCreatorLock.isSelected()) {
                String creator = ent.getCreator();
                clearFields();
                jTextFieldCreator.setText(creator);
            }
            if (jCheckBoxYearLock.isSelected()) {
                String year = ent.getYear();
                clearFields();
                jTextFieldYear.setText(year);
            }
        } else if (dataValidation() == null) {
            this.dispose();
        }
    }//GEN-LAST:event_jbtnApplyMouseClicked

    //Cancel Button Pressed
    private void jbtnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnExitMouseClicked
        this.dispose();
    }//GEN-LAST:event_jbtnExitMouseClicked

    private void jSpinnerTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinnerTotalPropertyChange

    }//GEN-LAST:event_jSpinnerTotalPropertyChange

    //Total Spinner Value Changed
    private void jSpinnerTotalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerTotalStateChanged
        limitCompleteMax();
        updatePerc();
    }//GEN-LAST:event_jSpinnerTotalStateChanged

    //Completed Spinner Value Changed
    private void jSpinnerCompletedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCompletedStateChanged
        limitCompleteMax();
        updatePerc();
    }//GEN-LAST:event_jSpinnerCompletedStateChanged

    //Radio Button Type Changed
    private void jRadioButtonBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBookActionPerformed
        reloadComboBoxes(retreiveCurrentType());
    }//GEN-LAST:event_jRadioButtonBookActionPerformed

    //Radio Button Type Changed
    private void jRadioButtonGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGameActionPerformed
        reloadComboBoxes(retreiveCurrentType());
    }//GEN-LAST:event_jRadioButtonGameActionPerformed

    //WishList Selected
    private void jCheckBoxWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWishActionPerformed
        allowDeadLine();
    }//GEN-LAST:event_jCheckBoxWishActionPerformed

    /**
     * When it's set to be a new entry, all fields are set to a "default" state.
     */
    private void clearFields() {
        jTextFieldID.setText("");
        jTextFieldTitle.setText("");
        jTextFieldCreator.setText("");
        jTextFieldYear.setText("");
        jTextFieldSubtitle.setText("");
        jTextAreaNote.setText("");
        jTextFieldGroups.setText("");
        jSpinnerCompleted.setValue(0);
        jSpinnerTotal.setValue(1);
        jRadioButton0.setSelected(true);
        jRadioButtonMusic.setSelected(true);
        jCheckBoxWish.setSelected(false);
        allowDeadLine();
        jDateChooserExactDate.setSelectedDate(null);
        updatePerc();
    }

    /**
     * When it's set to edit an entry, the data is loaded into the fields.
     */
    private void setFields() {
        EntryGroupConnection egc = new EntryGroupConnection();

        jTextFieldID.setText(String.valueOf(ent.getId()));
        jTextFieldTitle.setText(ent.getTitle());
        jTextFieldCreator.setText(ent.getCreator());
        jTextFieldYear.setText(ent.getYear());
        jTextFieldSubtitle.setText(ent.getSubtitle());
        jTextAreaNote.setText(ent.getNote());
        jSpinnerTotal.setValue(ent.getTotalLength());
        jSpinnerCompleted.setValue(ent.getCompletedLength());
        jComboBoxTotalType.setSelectedItem(ent.getLengthType());
        jComboBoxMedium.setSelectedItem(ent.getMedium());
        jCheckBoxWish.setSelected(ent.getWishlist());
        if (ent.getDeadline() != null) {
            Calendar dead = Calendar.getInstance();
            dead.set(ent.getDeadline().getYear(), ent.getDeadline().getMonth(), ent.getDeadline().getDay());
            //the use of deprecated methods is tacky, but the data would refuse to load in without it so be it
            jDateChooserDeadline.setSelectedDate(dead);
        }
        if (ent.getExactReleaseDate() != null) {
            Calendar exact = Calendar.getInstance();
            exact.set(ent.getExactReleaseDate().getYear(), ent.getExactReleaseDate().getMonth(), ent.getExactReleaseDate().getDay());
            jDateChooserDeadline.setSelectedDate(exact);
        }
        switch (ent.getRating()) {
            case 0:
                jRadioButton0.setSelected(true);
                break;
            case 1:
                jRadioButton1.setSelected(true);
                break;
            case 2:
                jRadioButton2.setSelected(true);
                break;
            case 3:
                jRadioButton3.setSelected(true);
                break;
            case 4:
                jRadioButton4.setSelected(true);
                break;
            case 5:
                jRadioButton5.setSelected(true);
                break;
            case 6:
                jRadioButton6.setSelected(true);
                break;
            case 7:
                jRadioButton7.setSelected(true);
                break;
            case 8:
                jRadioButton8.setSelected(true);
                break;
            case 9:
                jRadioButton9.setSelected(true);
                break;
            case 10:
                jRadioButton10.setSelected(true);
                break;
            default:
                jRadioButton0.setSelected(true);
        }
        switch (ent.getType()) {
            case "Music":
                jRadioButtonMusic.setSelected(true);
                break;
            case "Film":
                jRadioButtonFilm.setSelected(true);
                break;
            case "TV":
                jRadioButtonTV.setSelected(true);
                break;
            case "Book":
                jRadioButtonBook.setSelected(true);
                break;
            case "Video Game":
                jRadioButtonGame.setSelected(true);
                break;
            default:
                jRadioButtonMusic.setSelected(true);
        }

        String grps = "";
        int[] grpArr = egc.getEntParents(ent.getId());
        if (grpArr.length != 0) {
            for (int i = 0; i < grpArr.length - 1; i++) {
                grps += grpArr[i] + " ";
            }
            grps += grpArr[grpArr.length - 1];
        }
        jTextFieldGroups.setText(grps);

    }

    /**
     * A method that does multiple checks whether the data is valid to send
     * through; if the data is not valid for whatever reason, the method returns
     * a String containing the error, however, if it is valid the string will
     * return null.
     *
     * @return String
     */
    private String dataValidation() {
        String msg = null;
        if (!ent.getTitle().isEmpty()) {
            if (!ent.getCreator().isEmpty()) {
                try {
                    int yearTest = Integer.parseInt(ent.getYear());
                    if (ent.getCompletedLength() <= ent.getTotalLength()) {
                        if (ent.getTotalLength() != 0) {
                            int[] grps = convertGroupStringToIntArr();
                            if (grps.length == 0 || grps[0] != -1) {
                                return null;
                            } else { //no problems encountered
                                return "The Format in Groups Is Incorrect. It Should Only Be Numbers And Spaces";
                            }
                        }
                        return "Total Length Can't Be Zero";
                    }
                    return "Completed Length Can't Be More Than Total Length";
                } catch (NumberFormatException e) {
                    return "Year Is Not A Number";
                }
            }
            return "Creator Is Empty";
        }
        return "Title Is Empty";
    }

    /**
     * Takes the loaded in entry object and fills in the field's values.
     */
    private void refreshEntry() {
        ent.setTitle(jTextFieldTitle.getText());
        ent.setCreator(jTextFieldCreator.getText());
        ent.setYear(jTextFieldYear.getText());
        ent.setType(retreiveCurrentType());

        ent.setTotalLength((int) jSpinnerTotal.getValue());
        ent.setLengthType(jComboBoxTotalType.getItemAt(jComboBoxTotalType.getSelectedIndex()));
        ent.setCompletedLength((int) jSpinnerCompleted.getValue());
        ent.setRating(retreiveCurrentRating());
        ent.setNote(jTextAreaNote.getText());
        if (jDateChooserExactDate.getSelectedDate() != null) {
            ent.setExactReleaseDate((java.util.Date) (jDateChooserExactDate.getSelectedDate().getTime()));
        } else {
            ent.setExactReleaseDate(null);
        }
        ent.setMedium(jComboBoxMedium.getItemAt(jComboBoxMedium.getSelectedIndex()));
        ent.setSubtitle(jTextFieldSubtitle.getText());
        ent.setOwnership(jComboBoxOwnership.getItemAt(jComboBoxOwnership.getSelectedIndex()));

        ent.setWishlist(jCheckBoxWish.isSelected());
        if (jDateChooserDeadline.getSelectedDate() != null) {
            ent.setDeadline((java.util.Date) (jDateChooserDeadline.getSelectedDate().getTime()));
        } else {
            ent.setDeadline(null);
        }

        ent.setDateAdded(new Date());

        ent.setGroups(convertGroupStringToIntArr());
    }

    /**
     * Submits the Entry object to the database.
     */
    private void submitEntry() {
        if (dataValidation() == null) {
            Database db = new Database();
            try {
                if (editMode) {
                    db.updateEntry(ent);
                    JOptionPane.showMessageDialog(null, "Entry updated successfully, refresh the table to see effect");
                    //the indication to refresh for the user is due to a lack of any solution i could find to communicate to MainUI to refresh.
                } else {
                    db.addEntry(ent);
                    JOptionPane.showMessageDialog(null, "Entry added successfully, refresh the table to see effect");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, dataValidation());
        }
    }

    /**
     * Updates the progress bar's value.
     */
    private void updatePerc() {
        int comp = (((int) jSpinnerCompleted.getValue()));
        int tot = ((int) jSpinnerTotal.getValue());
        if (tot != 0) {
            jProgressBar.setValue((int) (Math.round(((comp * 1.0) / tot) * 100)));
        } else {
            jProgressBar.setValue(0);
        }

    }

    /**
     * This reset the Completed Length spinner in the case it goes above the
     * maximum set by total length.
     */
    private void limitCompleteMax() {
        int comp = (((int) jSpinnerCompleted.getValue()));
        int tot = ((int) jSpinnerTotal.getValue());
        if (comp > tot) {
            jSpinnerCompleted.setValue(tot);
        }
    }

    /**
     * Retreives the current selected Type.
     *
     * @return String
     */
    private String retreiveCurrentType() {
        if (jRadioButtonMusic.isSelected()) {
            return "Music";
        } else if (jRadioButtonFilm.isSelected()) {
            return "Film";
        } else if (jRadioButtonTV.isSelected()) {
            return "TV";
        } else if (jRadioButtonBook.isSelected()) {
            return "Book";
        } else if (jRadioButtonGame.isSelected()) {
            return "Video Game";
        } else {
            return "Music"; //if all else fails
        }
    }

    /**
     * Retreives the current selected Rating.
     *
     * @return int
     */
    private int retreiveCurrentRating() {
        if (jRadioButton0.isSelected()) {
            return 0;
        } else if (jRadioButton1.isSelected()) {
            return 1;
        } else if (jRadioButton2.isSelected()) {
            return 2;
        } else if (jRadioButton3.isSelected()) {
            return 3;
        } else if (jRadioButton4.isSelected()) {
            return 4;
        } else if (jRadioButton5.isSelected()) {
            return 5;
        } else if (jRadioButton6.isSelected()) {
            return 6;
        } else if (jRadioButton7.isSelected()) {
            return 7;
        } else if (jRadioButton8.isSelected()) {
            return 8;
        } else if (jRadioButton9.isSelected()) {
            return 9;
        } else if (jRadioButton10.isSelected()) {
            return 10;
        } else {
            return 0; //if all else fails
        }
    }

    /**
     * Reloads Combo Boxes according to the type selected (medium, total length
     * type).
     *
     * @param type
     */
    private void reloadComboBoxes(String type) {
        String[] totTypMu = {"[none]", "Tracks", "Minutes", "Discs"};
        String[] totTypFi = {"[none]", "Minutes"};
        String[] totTypTV = {"[none]", "Episodes", "Minutes"};
        String[] totTypBo = {"[none]", "Pages"};
        String[] totTypGa = {"[none]", "Percentage"};

        String[] medMu = {"Digital", "Vinyl", "CD", "Cassette", "Other"};
        String[] medFi = {"Film", "VHS", "Recording", "Streaming", "Other"};
        String[] medTV = {"Boxset", "Streaming", "Other"};
        String[] medBo = {"Hardcover", "Softcover", "ePub", "Other"};
        String[] medGa = {"Computer", "Console", "Handheld", "Mobile", "Website", "Other"};

        jComboBoxTotalType.removeAllItems();
        jComboBoxMedium.removeAllItems();
        String[] selecTotTyp = {};
        String[] selecMed = {};
        switch (type) {
            case "Music":
                selecTotTyp = totTypMu;
                selecMed = medMu;
                break;
            case "Film":
                selecTotTyp = totTypFi;
                selecMed = medFi;
                break;
            case "TV":
                selecTotTyp = totTypTV;
                selecMed = medTV;
                break;
            case "Book":
                selecTotTyp = totTypBo;
                selecMed = medBo;
                break;
            case "Video Game":
                selecTotTyp = totTypGa;
                selecMed = medGa;
                break;
        }
        for (int i = 0; i < selecTotTyp.length; i++) {
            jComboBoxTotalType.addItem(selecTotTyp[i]);
        }
        for (int i = 0; i < selecMed.length; i++) {
            jComboBoxMedium.addItem(selecMed[i]);
        }

    }

    /**
     * If wish list is not selected, deadline is deactivated and set to null.
     */
    private void allowDeadLine() {
        if (jCheckBoxWish.isSelected()) {
            Calendar now = Calendar.getInstance();
            now.setTime(new Date());
            jDateChooserDeadline.setSelectedDate(now);
            jDateChooserDeadline.setEnabled(true);
        } else {
            jDateChooserDeadline.setSelectedDate(null);
            jDateChooserDeadline.setEnabled(false);
        }
    }

    /**
     * Takes in the number sequence of the groups field and converts it into a
     * proper integer array
     *
     * @return int[]
     * @throws NumberFormatException
     */
    private int[] convertGroupStringToIntArr() {
        //does a scan of whether everything typed in is a valid number sequence,
        //else the first entry is set to -1 to indicte an invalid thing.

        try {
            Scanner scValid = new Scanner(jTextFieldGroups.getText()).useDelimiter(" ");
            int length = 0;
            while (scValid.hasNext()) {
                String grpID = scValid.next();
                Integer.parseInt(grpID);
                length++;
            }
            scValid.close();

            //here, some weird number may appear that does not correspond to actual groups
            //but updateConnections() in Database is set up to deal with them.
            int[] grps = new int[length];
            Scanner scActual = new Scanner(jTextFieldGroups.getText()).useDelimiter(" ");
            for (int i = 0; i < length; i++) {
                grps[i] = scActual.nextInt();
            }
            scActual.close();
            return grps;
        } catch (NumberFormatException ex) {
            int[] grps = new int[1];
            grps[0] = -1;
            return grps;
        }
    }

    /**
     * Recolours the components to either be light or dark mode.
     */
    private void recolourToLightTheme() {
        Color lightBack = new Color(255, 255, 255);
        Color lightBack2 = new Color(240, 240, 240);
        Color lightFore = new Color(10, 10, 10);

        jLabelTitle.setForeground(lightFore);
        jPanel1.setBackground(lightBack);
        jMainPanel.setBackground(lightBack2);
        jCollectionPanel.setBackground(lightBack2);
        jProgressPanel.setBackground(lightBack2);
        jSchedulePanel.setBackground(lightBack2);

        jRadioButtonMusic.setBackground(lightBack2);
        jRadioButtonFilm.setBackground(lightBack2);
        jRadioButtonTV.setBackground(lightBack2);
        jRadioButtonBook.setBackground(lightBack2);
        jRadioButtonGame.setBackground(lightBack2);

        jRadioButtonMusic.setForeground(lightFore);
        jRadioButtonFilm.setForeground(lightFore);
        jRadioButtonTV.setForeground(lightFore);
        jRadioButtonBook.setForeground(lightFore);
        jRadioButtonGame.setForeground(lightFore);

        jRadioButton0.setBackground(lightBack2);
        jRadioButton1.setBackground(lightBack2);
        jRadioButton2.setBackground(lightBack2);
        jRadioButton3.setBackground(lightBack2);
        jRadioButton4.setBackground(lightBack2);
        jRadioButton5.setBackground(lightBack2);
        jRadioButton6.setBackground(lightBack2);
        jRadioButton7.setBackground(lightBack2);
        jRadioButton8.setBackground(lightBack2);
        jRadioButton9.setBackground(lightBack2);
        jRadioButton10.setBackground(lightBack2);

        jRadioButton0.setForeground(lightFore);
        jRadioButton1.setForeground(lightFore);
        jRadioButton2.setForeground(lightFore);
        jRadioButton3.setForeground(lightFore);
        jRadioButton4.setForeground(lightFore);
        jRadioButton5.setForeground(lightFore);
        jRadioButton6.setForeground(lightFore);
        jRadioButton7.setForeground(lightFore);
        jRadioButton8.setForeground(lightFore);
        jRadioButton9.setForeground(lightFore);
        jRadioButton10.setForeground(lightFore);

        jProgressBar.setBackground(lightBack2);
        jCheckBoxCreatorLock.setBackground(lightBack2);
        jCheckBoxYearLock.setBackground(lightBack2);
        jCheckBoxWish.setBackground(lightBack2);

        jCheckBoxCreatorLock.setForeground(lightFore);
        jCheckBoxYearLock.setForeground(lightFore);
        jCheckBoxWish.setForeground(lightFore);

        jLabel2.setForeground(lightFore);
        jLabel3.setForeground(lightFore);
        jLabel4.setForeground(lightFore);
        jLabel5.setForeground(lightFore);
        jLabel6.setForeground(lightFore);
        jLabel7.setForeground(lightFore);
        jLabel8.setForeground(lightFore);
        jLabel9.setForeground(lightFore);
        jLabel10.setForeground(lightFore);
        jLabel11.setForeground(lightFore);
        jLabel12.setForeground(lightFore);
        jLabel13.setForeground(lightFore);
        jLabel14.setForeground(lightFore);
        jLabel15.setForeground(lightFore);
        jLabel16.setForeground(lightFore);
        jLabel17.setForeground(lightFore);
        jLabel18.setForeground(lightFore);
        jLabel19.setForeground(lightFore);
        jLabel20.setForeground(lightFore);
        jLabel21.setForeground(lightFore);

    }

    /**
     * Takes in settings.txt and loads in the two preferences for hints and
     * light/dark mode.
     *
     */
    private void loadSettings() {
        File settings = new File("settings.txt");
        boolean hints;
        try {
            Scanner scFile = new Scanner(settings).useDelimiter(", ");
            hints = scFile.nextBoolean();
            appearance = scFile.nextBoolean();
            scFile.close();
        } catch (FileNotFoundException | NoSuchElementException ex) {
            hints = false;
            appearance = false;
            writeToSettings(hints);
        }
    }

    /**
     * Writes to the setting file when updating the settings or in the case of a
     * missing file.
     *
     * @param hints - not used, just to keep continuity of settings.txt
     */
    private void writeToSettings(boolean hints) {
        FileWriter writer;
        try {
            writer = new FileWriter("settings.txt");
            writer.write(hints + ", " + appearance);
            writer.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntryUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntryUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntryUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntryUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EntryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupRating;
    private javax.swing.ButtonGroup buttonGroupType;
    private javax.swing.JCheckBox jCheckBoxCreatorLock;
    private javax.swing.JCheckBox jCheckBoxWish;
    private javax.swing.JCheckBox jCheckBoxYearLock;
    private javax.swing.JPanel jCollectionPanel;
    private javax.swing.JComboBox<String> jComboBoxMedium;
    private javax.swing.JComboBox<String> jComboBoxOwnership;
    private javax.swing.JComboBox<String> jComboBoxTotalType;
    private datechooser.beans.DateChooserCombo jDateChooserDeadline;
    private datechooser.beans.DateChooserCombo jDateChooserExactDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jMainPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JPanel jProgressPanel;
    private javax.swing.JRadioButton jRadioButton0;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JRadioButton jRadioButtonBook;
    private javax.swing.JRadioButton jRadioButtonFilm;
    private javax.swing.JRadioButton jRadioButtonGame;
    private javax.swing.JRadioButton jRadioButtonMusic;
    private javax.swing.JRadioButton jRadioButtonTV;
    private javax.swing.JPanel jSchedulePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerCompleted;
    private javax.swing.JSpinner jSpinnerTotal;
    private javax.swing.JTextArea jTextAreaNote;
    private javax.swing.JTextField jTextFieldCreator;
    private javax.swing.JTextField jTextFieldGroups;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldSubtitle;
    private javax.swing.JTextField jTextFieldTitle;
    private javax.swing.JTextField jTextFieldYear;
    private javax.swing.JButton jbtnApply;
    private javax.swing.JButton jbtnExit;
    // End of variables declaration//GEN-END:variables

}
